---
import dayjs from "dayjs";
import utc from "dayjs/plugin/utc";
import timezone from "dayjs/plugin/timezone";
import IconCalendar from "@/assets/icons/IconCalendar.svg";
import { SITE } from "@/config";

dayjs.extend(utc);
dayjs.extend(timezone);

export interface Props {
  class?: string;
  size?: "sm" | "lg";
  timezone: string | undefined;
  pubDatetime: string | Date;
  modDatetime: string | Date | undefined | null;
}

const {
  pubDatetime,
  modDatetime,
  size = "sm",
  class: className = "",
  timezone: postTimezone,
} = Astro.props;

/* ========== Formatted Datetime ========== */
const isModified =
  modDatetime !== undefined &&
  modDatetime !== null &&
  dayjs(modDatetime).isAfter(dayjs(pubDatetime));

const datetime = dayjs
  .utc(isModified ? modDatetime : pubDatetime)
  .tz(postTimezone || SITE.timezone);  // "Asia/Kolkata"

const date = datetime.format("D MMM YYYY, hh:mm A [IST]");
---

<div class:list={["flex items-center gap-x-2 opacity-80", className]}>
  <IconCalendar
    class:list={[
      "inline-block size-6 min-w-[1.375rem]",
      { "scale-90": size === "sm" },
    ]}
  />
  {
    isModified && (
      <span class:list={["text-sm", { "sm:text-base": size === "lg" }]}>
        Updated:
      </span>
    )
  }
  <time
    class:list={["text-sm", { "sm:text-base": size === "lg" }]}
    datetime={datetime.toISOString()}>{date}</time
  >
</div>
